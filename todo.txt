Text Trix
the text tinker
Copyright (c) 2002-7, Text Flex
http://textflex.com/texttrix

(See "Current Work" below for latest changes)

----Ideas----

-check on lost I-bar after switching to HTML view
-MacOS X compatibility
	-check on lack of shortcuts in MacOS X
	-about dialog box
-feature to insert hard returns after a given number of characters or for given visible space
-elim multiple spaces via Extra Returns Remover
-check on shortcuts in HTML/RTF views
-plug-ins: listener types create listeners that TextTrix attaches to given TextPad
-"Letter Pulse" plug-in
	-check on auto-indent adjustments after switching tabs in the middle of a pulse session
	-make HTML-view pulsing possible
-use java.util.ResourceBundle for internationalization and further keybinding customization
-auto-indent: adjust when single word spans multiple lines, including when hit enter in the middle
-automatically auto-indent lists: documentListener waits for single hard returns, which flags to check if the head of a continuous sequence of adjacent, preceding, text-containing lines starts at the beginning of the line while the lines in the rest of the sequence each begins with list delimiters; if next typed charcter is a list-delimiter, turns on auto-indent for the given region; similar algorithm when loading files
-when saving an already existing file, match the file filter with the file's extension
-Plug-ins
	-plug-ins' pref list fields sizes
	-plug-in: spell checker
	-plug-in: spell-check any given text in system clipborad, displaying corrected text in Text Trix pad
	-build API for plug-ins?
	-Search plug-in
		-option to search backward
-preferences panel to choose default paths and file type filters
-Java Web Start compatibility
-option to remember which specific files used auto-indent
-Tabbed pane updates
	-when have multiple files with same filename, add more of path to tab titles
	-truncate filenames on tabs
-print images and multi-formatted text
-rename files in place
-TablePad for spreadsheets, including tXtFL player-creation plug-in
-Wrap-indent
	-update indents when paste over selected area
-command-line arg not to reopen files or for quiet operation
-check on completeness of $(TARGET_FILES) in cleans
-pref for hanging indent size
-launch remotely, w/o installation: bundle entire application, including plugins, within single jar; mechanism to add plugins directly into the jar
-Search plugin looks through multiple files
-file management:
	-working copy mode: allows user to work on a copy of the file rather than the file itself, then see and apply changes as desired
	-file locking
	-read-only mode
-integrate with Jar Ajar plug-in installation mode
-reopen tabs if exit canceled

----Future releases----

v.0.7.2
-fix duplication of shortcuts/license tabs when open from Help menu
-set font face and size in prefs
-incorporate JEdit Syntax Package (OSS: MIT-style license)
-make clean should cleanup inner/anonymous classes
-drag-n-drop files to open them in Text Trix
-backward Search/Word Find
-regex in Search/Word Find
-add line saver to popup menu
-when closing tab, should select previous tab in tab history
-Line Dance appears to insert a tab into text after hitting enter while editing line name
-check on Line Dance exception when forget line while editing its name
-option to make group tabs invisible
-fix sporadic delay in startup on Vista
-Plug-in dialog first launches should open somewhere near the main window position
-Check file timestamps and warn if open file modified elsewhere

----Current release----

v.0.7.1
-Line Dance table doesn't update when shift between groups; FIXED (#1631008)
-Line Dance should automatically name line if text is highlighted; ADDED
-setCaretPositionTop should set to beginning of selected regions; FIXED
-automatically highlight Word Find and Line Find text when place cursor inside; ADDED
-fix compiler errors when building in Cygwin platforms; FIXED (#1636301)
-Drag-n-drop text; ADDED
-Crashes on startup in Vista; WORKAROUND (#1690369): reverts to default L&F file chooser when Vista one fails
-build scripts should be set explicitly to /bin/bash; FIXED
-Clarify open/close icons; ADDED: new open-file/close-tab icons
-Allow compilation and packaging from any directory; ADDED
-Migrate code repository from CVS to Subversion; ADDED

----Past Releases----

v.0.7.0
Changes in v.0.7.0final (since rc1):
-Make Line Find saver action more thread-safe; FIXED (#1624027): may also fix sporadic launch failures and variable placement of the line saver action in the View menu
-speed up icon loading; ADDED
-allow Java binary paths with spaces in run/pkg scripts; FIXED
-More icons; ADDED
-Docs cleanup; UPDATED
-----------------
Changes in v.0.7.0rc1 (since beta2):
-Line Dance fixes
	-Line Dance should highlight previous line after deleting a line memory; FIXED (#1622107)
	-table should scroll to bottom each time a new entry is added; FIXED (#1622105)
-add line saver to view menu; ADDED
-Search dialog window should be smaller; FIXED (#1184709)
-when searching through text, scroll the text pane so that the cursor is near the top of the view area; ADDED
-Preferences additions
	-import/export/reset preferences options; ADDED
	-records install location for accessing during plug-in installation; ADDED
-General fixes
	-fix exception when removing the only remaining tab group; FIXED (#1622219)
	-fix exception when adding new tab when no tab group exists; FIXED (#1622221)
	-update UI after adding a new tab group; FIXED
	-when opening multiple files, wait until opened last file before updating UI; FIXED
	-fix various tab history failures; FIXED (#1622217)
-Documentation enhancements
	-provide PlugInWindow template for creating new plug-ins more easily; ADDED
	-shift Shortcuts link to an HTML file with a table of shortcuts; ADDED
	-api documentation; UPDATED
	-clean up changelog, readmes; UPDATED
-Code cleanup
	-make an abstract BrowseFiles class for file open and browsing actions; ADDED
	-shift yesNoDialog from Text Trix to LibTTx; ADDED
	-make separate ExtensionFileFilter public class; ADDED
-----------------
Changes in v.0.7.0beta2 (since beta1):
-Line Dance additions and fixes
	-Line Dance should automatically highlight the latest entry; FIXED (#1614445)
	-hitting Enter while in the Name cell in Line Dance shouldn't highlight the first entry in the table; FIXED (#1614440): cycled to next row when user hits Enter, but now fixed to line dance instead
	-add "edit name" button to Line Dance; ADDED (#1614446)
-Search plugin fixes
	-Search applies Find and Replace All only to selection when it is an instance of the query term, even when selected area only option isn't checked; FIXED (#1618480): had routed to single replace, but now single replace checks for replace all option
	-Find and Replace All performance issues--seems extremely slow for small selected area; FIXED (#1618481): updated the replace all functionality to reflect that of single replace, but over broader area; also, now only replaces query if fully within selected area, when selected area only option checked
-UI fixes
	-Navigation section on toolbar, including forward/Back icons and Line Dance; ADDED: tab nav section on toolbar
	-Icon refresh; ADDED: updated open/close icons, larger frame icon
	-make Ocean the default L&F for all systems except for Windows to provide a more consistent look; ADDED: Ocean is relatively similar to Windows L&F, especially compared with GTK; also provides workaround for lack of multi-file selection feature in GTK as well as abnormally large buttons that go off the toolbar
	-prevent status bar text overlap between introductory phrase and Word Find; FIXED (#1618476): changed welcome message
-Build enhancements
	-package in Jar Ajar 0.3.1pre builds; ADDED
	-scripts should automatically detect Java binaries in Linux with new /usr/java/default link in Java 6; ADDED
-Known issues
	-check whether tab history should keep ignoring tab initially opened
	-shift-tab doesn't unindent in Linux
	-check for lack of proper auto-wrap-indent detection on first launch
	-should only edit cell after double-click, not single-click, to follow more default spreadsheet table behavior? (#1614443)
	-update shortcuts page
------------------
Changes in v.0.7.0beta1:
-duplicate files
	-opening file should check whether the file has already been opened and, if so, switch to that tab instead; ADDED: checks for open file in all tab groups before creating new tab
	-saving file over path of currently opened file should close the old version of the file; ADDED: checks whether to close other tab with identical path, warning of potentially unsaved changes, to see that tab, or to cancel
-Line Dance
	-add a plug-in-like tool to record line numbers and allow returning to them by double-clicking; ability to name and rename lines, add and remove line records, and jump directly to the specific location within the line by either a double-click or a pressing on a button; ADDED: Line Dance
	-add tool tip description
	-add icon; ADDED: icon and rollover icon
	-update line positions based on character insertions?
-Word Find
	-Search plugin: fix find/replace only searching in highlighted areas unless nothing highlighted
	-Search plugin: replace fn very slow when searching within selected area
	-text find, similar to line find; ADDED: "Word Find," a feature similar to the "type as you find" feature found in web browsers, but requiring the user to place the cursor in a special box to distinguish from text editing
	-ability to search backward in text
	-right-click to save current cursor location into Line Find; ADDED: right-click in status bar brings up popup menu that allows saving the current line number into Line Find
	-navigate backward
	-F3 should work within the text pad, too
-group tabbing
	-tab groups; ADDED: tabs can now be grouped into parent tabs so that one can organize, say, all web files in one tab, all personal documents in another, and all programming files in a third tab group; remembers tab grouping for next program launch
	-rename and remember tab groups; ADDED: right-clicking on group tab brings up input dialog to enter group name; name saved and reapplied on next program start
	-write name in directly; TARGET: Java 6
	-close tab button; TARGET: Java 6
	-mechanism to clear out saved tabs from previous versions
	-consider whether to save groups without any tabs with text
	-fix bug where not picking up last tab in history sometimes
-Song Sheet
	-add flats ("b") capability; ADDED: identifies flats and transposes them according to a flats scale
	-change half-step usage so that always adds half a step; ADDED: rather than adding half a step if the full steps is positive, or subtracting one if negative, which made descending half a step difficult, now consistently adds half a step
	-clarify "chord indicators"; FIXED: changed to "chord suffixes" to clarify that strings don't have to have these suffixes to indicate a chord
	-make the results field and button span the entire dialog window; FIXED: span the whole field
	-add tool tip description
-bug fixes
	-remove popup menu from tool bar; FIXED: removed from menu, since currently not applicable to the toolbar
	-Alt-TAB shifts focus to the menu bar when the time gap between pressing Alt and TAB is small; WORKAROUND: based on workaround to Java bug #6458497 (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6458497), automatically shift focus from menubar back to original component when changing windows
	-use single instance of TextPadDocumentListener to improve performance; FIXED: listener discovers the appropriate tab, so no need to create instance for each tab
	-fix right-click popup error on first tab; FIXED (regression): the PopUpListener had been generalized to include popups from all sorts of components, but since the listener would be initialized for the first tab prior to the creation of the popup, the tab would have nothing to popup; now, each component has its own popup listener, tied into its own program-wide popup
	-remove Non-Printing-Character Viewer plugin since confusing that actually modifies the underlying text; FIXED: removed
	-closing tab should take you to the last used tab

v.0.5.1
-fix Refresh Tab from creating a new tab rather than refreshing the current copy; FIXED: updated the main openFile method not to reuse tabs by default, but only if flagged, or the current tab is empty and unchanged
-classpath info in run script; ADDED: -cp parameter to run.sh to define classpath in case CLASSPATH env already set to some other location
-fix load failure on X11 systems; FIXED (#1328572 ): 32x32 icon apparently won't load on Java on X11, so switched to smaller, 16x16 icon
-streamline stats function in Search plugin; FIXED: stats works on both selected area only and entire document; stats results cleared when button other than stats button chosen
-add nbsp support to SongSheet plugin; ADDED: "&nbsp" ('\240') supported as a blankspace in chord lines; spaces, tabs, and nbsp removed from "chord indicators" and applied only as blankspaces

v.0.5.0
-from v.0.5.0rc1
	-fix failure to reuse initial tab; FIXED (#1184694): updated openFile(File) to reuse unused tab by default, while the main openFile now ensures that the tab has not been changed before reusing it for a newly opened file, even if the tab is blank
	-LineFind shouldn't go to line if just click in box when it already has a number; FIXED (#1184698): advances to line each time user types in new number, not if just clicks in box, or if type Enter
	-Search plug-in tip should read "^t" and "^n" instead of "\^t" and "\^n", respectively; FIXED (#1184700): removed unnecessary, incorrect escape char flag
	-plug-ins fail to load when running Text Trix from remote connection, eg via My Network Places; FIXED (#1184701): added an extra backslash to the front of the plug-ins folder path
	-prefs should default to true for reopening tabs and auto-indenting typical programming file types; FIXED (#1184705): true by default
	-Search plug-in panel default size too small on MacOS X platform, squishing the Tip area into the Find text box; FIXED (#1184709): enlarged the default size
	
-auto-wrap-indent additions and fixes
	-tab entire regions; ADDED: when auto-wrap-indent selected, tab entire selected regions with TAB, and un-tab with Shift+TAB
	-decrement line's tab with Shift+TAB; ADDED: if no text selected, current line loses one leading tab if auto indent mode and line indented
	-adjust wrap-indent when user presses delete key or any of its shortcuts; ADDED: re-wrap-indents when user presses Delete key or shortcuts that also delete the next character
	-fix auto-wrap-indent to not rely on previous line's indentation; FIXED (#982975, 709862): indent function no longer skips over the second of adjacent newlines--the one following a blank, unindented line
	-fix wrap-indent failure at start of document; FIXED (#982977): removes the graphical indent at the start of documents in JVM >= v.1.5
	-fix failure to auto-indent when first line is blank and second line has the tab; FIXED (#982992): now properly counts the previous line's tabs because no longer skips past the first newline
	-update auto-wrap indents after changing text; ADDED: updates when plugin run returns changed text
	-adjust isLeadingTab() or the backspace unindenter to check if the text is selected, since selecting text backward and culminating at a leading tab causes a graphical unindent after a backspace; FIXED: leading tab checker looks at either the first character of a selection, to ensure that changes to  leading tabs at the start of a selection affect the graphical indent, or, if no text is selected, the character just behind the current caret position
	-undo should apply indents if auto-indent is enabled; FIXED: graphically indents the current paragraph if autoIndent is on
	-wrap indent to the first line in the paragraph, rather than indenting the first line a little more with each tab; ADDED: negative, hanging indent for each tab, along with array of negative tab stops to fill up the space from the hanging indent
-plug-in updates
	-plug-in model
		-option for plug-in to specify the region to replace; ADDED: when the plug-in wants to replace only a section of the text it has received, the plug-in can specify this region along with the text to replace it; TextTrix uses Document and indentRegion controls for speedy, specific updates
		-re-highlight text after opening new plug-in dialog window; FIXED: no longer lose highlight when opening plug-in dialogs
		-get default window size from plug-in for first-time usage of the plug-in; FIXED: gets size from plug-in rather than from dialog
		-plug-in load failure shouldn't tear down the entire menu bar creation; FIXED (#1092036): checks for null plug-ins and prevents their addition to the plug-in array
	-Search plug-in fixes
		-fix replace-all fn to not exceed the selection boundaries; FIXED (#1007487): replace-all used to exceed boundaries by a few characters, but now no longer appears to do so; replace-all now replaces only within the selected area when selected-area-only option chosen; searches and replaces within the entire text when wrap option chosen; otherwise, only works from the cursor position
		-Selected-Area-Only and Wrap check boxes should reflect their mutual exclusivity; ADDED: since the two options opose one another, turning on one turns off the other, while both can also be unchecked simultaneously
		-replace fn should follow convention of selecting found text before replacing it; ADDED: if selected text equals the text to find, replaces it; otherwise, employs find fn to select the next instance of the text to find, allowing the next call to replace fn will replace the text; Note: differs from convention by checking selected text before replacing it
		-add summary field; ADDED: "Results: " label summarizes the find/replace findings
		-fix replace when Ignore Case unchecked; FIXED: stores selected text before exiting "if" b/c of false ignoreCase
		-escape chars; ADDED: accepts TAB (^t) and NEWLINE (^n) escape characters to both find and replace
	-HTMLReplacer plug-in comprehensiveness
		-fix HTMLReplacer tool tip now that no longer need double undos; FIXED (#1007490): removed obsolete advice
	-ExtraReturnsRemover
		-dialog interface; ADDED: similar layout as in Search plug-in
		-make email markers optional; ADDED: check box option
		-configurable list markers; ADDED: comma-delimited list of markers that indicate a list item, such as "-", "*", or "[outline])" for outline-formatted lists, eg "IV)" or "a)"
		-line length threshold; ADDED: configurable threshold to preserve short lines, as in some poetry
		-selected text; ADDED: an option in the dialog window rather than an assumption based on text selection
		-results section to summarize removals; ADDED: results displays num chars removed, minus those added b/c of email markes
		-update tool tip
-streamline integrated windowing design
	-have plugins supply panels to TextTrix for it to apply to windows that TextTrix keeps secure; ADDED: plug-ins provide panels to TextTrix, which attaches them to dialogs that remain in TextTrix's hands; no longer need elaborate focusing mechanism, for the dialogs associate with the main TextTrix frame and automatically focus with it
	-don't close plug-in windows for plug-ins still included when reloading prefs; ADDED: only close visible dialogs when plug-in no longer included
	-check whether should remove plugInDiags dialog if remove plug-in; may need to remove in reloadPlugIns() since user may remove the plug-in jar file and add back, but the dialog would no longer correspond to reloaded plug-in; CHECKED: if plug-in dialog with same name already exists in the dialog array, the newly created dialog replaces the old one
	-remove activate-windows-together pref; REMOVED: no longer necessary
	-use plugIn panel size for default plugIn dialog size, and use location from TextTrix as owner by default; ADDED: plugIn windows pick up size and location info from panel size and owner location by default
-prefences panel
	-prefs panel should also be fit into a JDialog, with TextTrix as the owner; ADDED: prefs panel conforms to new plug-in window model, except that Preferences itself extends JDialog since Preferences remains internalized in the program
	-save prefs panel location and size, even if user doesn't save or apply prefs changes; ADDED: treats prefs panel as a plug-in for size and location information storage and retrieval; adopts same default size and location as with plugIns
	-reorganize to compact unnecessarily large fields; ADDED: divided general prefs panel from 2 to 3 columns
-update icons; ADDED: slick, modern icons (courtesy of Stephen Liu)
-stop auto-save thread when close file; FIXED (#1007497): removing tab stops the timer
-refresh files; ADDED: refresh tabs with their current file, with warning for unsaved changes
-new build process
	-Makefiles to allow selective building and updating; ADDED: "configure" script creates Makefiles to build Text Trix from the base or distant locations within the filesystem
	-build the API through the Makefile; ADDED: api rule for texttrix package
	-rules to clean and install; ADDED: clean and install rules, including new run.sh script to run Text Trix from class files within installation directory
	-pkg script should check that build directory exists or successfully created before continuing; FIXED: checks for directory b/c lack of it indicates that the script will not be able to change directories and will instead delete files in the current directory
	-fix pkg script to allow "./" run calls from within Cygwin; FIXED: remove "./" from prefix of "$0"
-function to go directly to a line number
	-Line Find; ADDED: Line Finder highlights the line number as it's typed into a new text field in the status bar
	-more versatile status bar; ADDED: experimenting with new SpringLayout in status bar
-fix printer indentation loss; FIXED (#1067823): store indent information from the paragraph attributes in a new PrintPadText object for each line

v.0.3.5
-auto-save
	-preference option to save file automatically; ADDED: auto-save option to start auto-saving the moment the preference is saved ./
	-customizable time interval that restarts every time the file is manually saved; ADDED: time interval preference, which resets at every save and doesn't restart until the file is changed again ./
	-file chooser should check whether already open; ADDED: checks whether open to prevent duplicate openings; existing file still auto-saves underneath open chooser ./
	-prompt before saving the changes to the current file; ADDED: preference option to prompt the user to accept the file changes since the auto-save overwrites the current file ./
	-new StoppableThread abstract class to easily request threads to stop; ADDED: private classes can extend this class to have both private status and the ability for an external class to stop the thread ./
-when refocusing one window from Text Trix, option to bring the other windows to the forefront
	-activate windows together; ADDED: when clicking on any Text Trix window, all the other windows are brought to the front and immediately below the window just selected; to prevent automatic reactivation while shifting to other windows, flag renders window inactivatable until timer unsets flag; window deactivation listener also sets the flag to prevent Text Trix from automatically requesting activation immediately after switching activation to another program ./
	-option to turn off; ADDED: Prefs option to turn off the activateWindowsTogether feature ./
	-close open plug-in windows, or else they will no longer respond to activation requests; ADDED: dialog warning that plug-in windows will be closed when saving preferences while any of the windows are open ./
-save plug-in window positions
	-component listener to store plug-in position info in prefs; ADDED: component listener captures plug-in window size and location changes to store in the prefs according to plug-ins' filenames ./
	-restore plug-in window position parameters from last opening;  ADDED: TextTrix restores these parameters from prefs when creating plug-in action ./
-printing
	-print text as viewed in Text Pad; ADDED: prints plain text with line breaks at the same location as the current Text Pad displays the text ./
	-print preview; ADDED: screen shows each page before printing, with print button to enter the print dialog directly ./
-auto-indent fixes
	-fix auto-indent over-indentation when running in JVM v.1.5; FIXED (#895315): the unindentCurrentParagraph method assumed that the tab had not yet been deleted, no longer true in JVM v.1.5 and thus creating an unindented an extra tab space there; each TextPad now flags JVM ver at startup ./
	-refresh after paste; FIXED (#766257): overrides paste method to auto-indent the entire pasted region if necessary ./
-main interface updates
	-button to close tabs; ADDED (#799564): button next to open button closes the currently selected tab; tool bar separator distinguishes file operators from plug-in invokers ./
	-fix bold file menu font; FIXED (#911283): moved file menu object creation from class variable declaration area to TextTrix constructor ./
	-align the "About" option pane with the main window; ADDED: now opens on top of the center of the main window ./
	-main window title should update after user closes a tab; FIXED (#962436): for some reason, tabbed pane change listener not invoked when close tab, so need to update title manually when closing tabs
	-file type filters update; ADDED: added *.js and *.sh to the programming file type filter and *.js to the Web filter
	-enable shift-backspace as normal backspace; FIXED (#961922): added as action in TextPad ./
	-point user to texttrix website if missing any documentation; FIXED (#703846): missing file JOptionPane dialog ./
-help menu items update
	-remove "Features Descriptions" menu item and document; FIXED (#799565): removed to focus on the plug-in tool tips, displayed dynamically for loaded plug-ins ./
	-open help documents in blank Text Pad if active; FIXED (#799563): same mechanism to open the help documents as to open regular files, except that the mechanism renders the help documents uneditable ./
-build scripts update
	-assume Java commands already in path, with option to pass Java binary directory commands directly; ADDED: avoids forcing the user to specify the specific location of the path, since the path likely differs from system to system; option to specify path manually ./
	-option to output help documentation; ADDED: helps docs output via "-h" command-line argument ./
-plug-in updates
	-PlugInWindow class to provide core windowing functions automatically; ADDED: window class now extends PlugIn, adding WindowAdapter functions to allow for windowing integration with the main application ./
	-move word-search functions to LibTTX to make accessible to all plug-ins; ADDED: moved the word-finding function ./
	-add loop capability to Letter Pulse; ADDED (#799567): loop option for repeated pulsing, with a stop button to terminate it; pulse stops automatically after closing the pulser window ./
	-allow single-step undo of plug-in text changes; FIXED (#963011): employs new CompoundEdit mechanism in TextPad to restore original state through single undo action
-status bar
	-add status bar for line numbers and other messages; ADDED: status bar at bottom of a new panel, which holds tabbed pane and status bar so user can still move tool bar to southern position of main window; tab change listener to update status bar when switching tabs ./
	-add line numbers for lines with hard breaks; ADDED: current line number, total lines, and position as percentage of document length ./

v.0.3.4
-preferences:
	-file history:
		-store file paths of last opened or saved files; ADDED: using java.util.prefs (reqs JRE 1.4) to store paths, w/o duplicates ./
		-File menu with menu items for each file; ADDED: descending menu items ./
		-dynamically update menu items; ADDED: regenerates menu entries after opening each file ./
		-truncate long paths; ADDED: "..." substitutes for excessive middle path characters, but show full path in tool tip ./
		-choose number of files to remember; ADDED: adjustable file history count ./
	-panel:
		-create preferences panel; ADDED: panel complete with tabs, okay/apply/cancel buttons ./
		-remember panel size; ADDED: record panel size whenever hit "ok" button ./
		-remember program size and location; ADDED: record whenever move or resize the program window ./
	-auto-indent automatically for given extensions; ADDED: can turn on/off and customize extensions ./
	-plug-ins:
		-load all (default) or only specific plug-ins; ADDED: load plug-ins dynamically whenever open Preferences panel; include all plug-ins or specify from list ./
	-keybindings:
		-standard keybindings; ADDED: universal shortcuts model along with other key combos found on typical desktop systems ./
		-hybrid keybindings; ADDED: mesh of standard keybindings and Emacs ones by including single character and line Emacs shortcuts ./
		-emacs keybindindings; ADDED: single-key shortcuts added on top of hybrid keybindings, with necessary extra adjustments ./
-GUI worker threads; ADDED: menu creation and updating, including file history updates, in own threads to simultaneously load various graphics ./
-programming src code file filter; ADDED: filter to accept java, cpp, and c files ./
-fix incorrectly labeled icon shortcut keys; FIXED: removed tool tip shortcuts ./
-close files from left to right; REVISED: allows tab restoration to easily open files in the same order that they were at closing ./
-clear default name from file chooser when saving new file; ADDED: if file doesn't exist, goes to the most recent directory but gives a blank name to prevent overwriting an existing file ./
-provide original name by default when saving-as an already saved file; ADDED: provides the name; ADDED: uses the "All Files" filter when first opening files ./
-fix StringIndexOutOfBoundsError when running most plug-ins on selected text; FIXED: TextTrix.textTinker(PlugIn) passed in only the selected region, but the plug-ins treated it as if they received the whole text; revised PlugIn spec so that default to run(String) rather than making all run methods abstract; plug-ins w/ alwaysEntireText == true need to override run(String, int, int) to respond to selection boundaries ./
-re-highlight selected text in Search plug-in; ADDED: if "Selected Area Only" option chosen in stats mode, will rehighlight; otherwise, removes highlighting to avoid giving the false impression that the stats are for the selected area only ./
-tab history doesn't always follow most recent path; FIXED: when in middle of history and switch to tab not next in history, erases the history forward from that point to conform to browsers' behavior ./
-when undo after auto-indent, have to undo all the indents; FIXED: subclassed UndoManager so can flag to ignore style changes, such as auto-indents ./
-generalize the build scripts; ADDED: generalized plug.sh, pkg.sh, and build-docs.sh to work out-of-the-box except for possibly altering the compiler directory ./
-build on Cygwin; FIXED: automatically checks to see if in Cygwin environment and sets paths accordingly, adjusting some through cygpath command so that compiler could recognize the files ./

v.0.3.3
-set tab display size; FIXED: TabStop, TabSet, and SimpleAttributeSet to specify distances according to character widths ./
-JTabbedPane tabs still adjust their widths when the asterisk indicating unsaved changes pops up; FIXED: using monospaced font to substitute characters w/o incurring any width changes ./
-word delete often only deletes half words in Windows systems; FIXED: Document methods rather than getText()/setText() to determine characters; not sure why the latter methods work for viewPlain() and similar methods, though ./
-update tab tool tip when open file; FIXED: set the tool tip, not just the tab title ./
-word-wrap indent; ADDED: left indents equal to the number of tabs within a given paragraph ./
-URLClassLoader can't load plugins in JRE v.1.4.2-beta-b19; FIXED: create file from path and convert file into URL rather than creating URL address manually before converting; TESTING: works on JRE v.1.4.2-b28, too ./
-plugin methods allowing option windows, listeners, etc:
	-plugin types to specify how to implement them; eg "run", "dialog", "listener"; DEFERRED: plug-ins can open "dialogs," now called "options windows," through the universal startPlugIn() method (see below); may need separate plug-in type for "listeners," though ./
	-dialog types create a dialog object that TextTrix invokes on its text; ADDED: PlugIn now has two separate methods that TextTrix invokes: startPlugIn and runPlugIn; TextTrix calls startPlugIn when the user first presses the plug-in's button, which can in turn either immediately notify TextTrix to call runPlugIn or allow the plug-in to create its own dialog box to set options and a button to make the notification ./
	-check whether to make PlugInEvent and similar classes public; ADDED: the events, listeners, etc are all public to allow referencing and extension ./
	-store icon and rollIcon for future use, such as in option windows; ADDED: storage variables; plug-ins must now call PlugIn.getRollIcon(String) in getRollIcon() ./
-plugin adaptor class to permit unimplemented methods; DEFERRED: virtually all PlugIn's abstract classes are necessary now ./
-shortcut to switch b/n tabs--ff Mozilla keybindings, except that goes to last-used tab before proceeding in index order; ADDED: "Back" and "Forward" shortcuts (View > Back/Forward or Ctrl-Shift-]/[) with an unlimited history ./
-text area focus w/ each JTabbedPane switch; ADDED: two separate calls to requestFocusInWindow() in tabbed pane's stateChanged ChangeListener method -- one call within EventQueue.invokeLater(), the other afterward; TESTING: maybe some inconsistency on Windows platforms ./
-change to MPL 1.1/GPL 2.0/LGPL 2.1 triple license; SWITCHED: switched to the triple license to ensure that the Text Trix editor remains open source while permitting its inclusion in both proprietary and copyleft software ./
-retitle window bar when opening or saving new file; ADDED: title updater ./
-"Search" plugin:
	-port the FindReplace tool to a dialog-based plug-in tool; ADDED: "FindReplace" is now "Search"; PlugIn classes can now alter an "alwaysEntireText" variable to specify that the plug-in should receive all of the text despite any highlighting, along w/ highlight positions; plug-ins now return text to highlight as well as altered text ./
	-make statistics fns; ADDED: character, word, and line count ./
	-fix word search when caret at end of text; FIXED: removed detrimental variable in getWord() (formerly part of findWord()) 
	-add a no-text-change value to PlugInOutcome; ADDED: flag to show that the text has not changed, such as when finding text but not repacing it ./
-"Letter Pulse" plugin:
	-demonstrate as a "trix" plugin; ADDED: sequentially highlights the letters of a given message ./
	-demonstrate the options window; ADDED: follows a similar model as the "Search" plugin ./
	-demonstrate multiple updates to the Text Pad; ADDED: repeatedly calls the highlighter to select a different letter with each pulse ./
	-demonstrate the no-text-change flag; ADDED: pulse w/o update text since not modified ./
-null pointer when no "features.txt", "shortcuts.txt", or "license.txt"; FIXED: weed out these and similar calls when null ./

v.0.3.2
-update tab tooltip when rename ./
-longer tool tip times; ADDED: used shared instance of ToolTipManager to extend delay time ./
-check on HTML-view-induced freezing (eg use desc area from http://freshmeat.net/projects/texttrix); PROBABLE FIX: might be JRE display bug on test platform or platform OS bug ./
-added rtf file filter in open/save dialog ./
-broken selected text paragraph remover; PROBABLE FIX: Document functions seems to relieve the problem (see below) ./
-check auto-indent when hard return from end of indented line; PROBABLE FIX: Document functions seems to relieve the problem (see below) ./
-plug-in architecture for features; ADDED: JAR-based plugin model ./
-word-determiner failure (see myweb/txtfl/downloads.html); FIX: index bugs in Tools.findWord ./
-tools don't work in Windows systems; FIX: ever since the switch to JTextPane from JText Area, the setText() function seems to work on only a given line--using Document functions instead seems to relieve the problem ./
-open multiple files at once ./
-deleteNextChar keybinding ./
-fix tabbed pane title updater to lessen size change when change Save asterisk symbol ./
-check on inabilit to save by htting enter in save-as dialog box for new filenames; check on updating the tab title during such saves and also opening the first file; often have to save-as twice before actually save; check on getting "open" tab instead of "save" in Save As dialog sometimes; FIX: setMultiSelectionEnabled to false for save dialog ./
-check restoring cursor when return to window--add window adapter feature to explicity bring back to original position; FIX: return to original cursor position or start of selected region ./
-broken find/replace; FIX: word search bug ./
-check on having to leave jar plugins uncompressed (-0 option); FIX: bug in JRE v.1.4 prevents PNG/GIF loading from compressed JARS; workaround by loading data into array and sending array to PNG constructor ./
-allow popups to display in Windows systems; FIX: use mouseReleased() in addition to mousePressed() with isPopupTrigger() ./
-check on non-functional shortcut keys after HTML view; NO LONGER REPRODUCIBLE ./
-self-extractor to avoid launching from unextracted zip packages, which do not read the plugins; ADDED: Jar Ajar self-extractor now packages Text Trix ./
-specify on command-line extra files to open at start (eventually want to have option to load files from last exit, too) ./
-check before overwriting file; ADDED: file overwrite warning dialog ./
-check file permissions before saving; ADDED: unpermitted-path dialog, with option to save to new path ./
-close streams in catch statements; ADDED: finally statements as well as null pointer checks on resource input streams from files ./

v.0.3.1
-convert HTML character entities and convert multiple spaces to single spaces in the HTML Replacer tool
-auto-indent ./
-open/save dialogs return to last opened/saved path for current tab ./
-tab-switch shortcut keys; bug fix for closing tab when none exist; added View menu ./
-option to only apply features to selected areas ./
-enter key while in find dialog's pattern box starts search; while in replace box, start find and replace ./
-fix findWord() to work for word at very end of text ./
-wrap in findReplace() when at end of text ./
-check find/replace repainting of text area; use getHighlighter().setVisible(true) ./
-stricter rules for numbered list in extra hard return remover ./
-plain/html/rtf viewer; switch to JTextPane (JEditorPane doesn't support word wrapping well) ./
-look into StateEdit for viewer undo functionality (see "SwingBk," 11.2.7) ./
-no longer have to invoke undo mutiple times with tools ./
-use getSelectedPane() more ./
-text pad popup menu ./
-program icon ./

v.0.1.6, aka v.0.3.0
-rudimentary html replacer ./
-find/replace, incl separate word, word-wrap, selected text, replace first, replace all, and ignore case ./
-see if can add parent component to save and open dialogs ./
-non-printing character display ./
-prevent closure after clicking to close the window frame and selecting cancel ./
-text area focus on start ./
-equivalency string table loading for preferences suite (implement preferences in v.0.5 series) ./
-change cancelled save on exit to also cancel the exit--try having fileSaveDialog return whether canceled ./
-separate "Features descriptions" page in "Help" section ./
-backup text before hard return removal in Txtrx ./

v.0.1.5
-create command-line version, including all appropriate text-goofing function ./
-change email address refs to davit@users.sourceforge.net ./
-eliminate the <pre> tags ./
-split features into separate classes to make the features more portable ./
-rename stripExtraHardReturns() to removeExtraHardReturns; somehow currently works w/ merely hardReturns call ./
-word deletion--add as new action for portability ./
-emacs word forward and backward keybindings ./
-menu mnemonics ./
-toolbar ./
-toolbar icons (tmp), incl rollover change ./
-allow people to use indents as lists ./
-only append space while combining lines if line lacks one at end ./
-check about expanding tabs when increase title size via " *"--always add 2-3 spaces to each title when showing w/o the " *" ./
-check one character delay before showing change in title--prob TextPad flags change after TextTrix checks; try checking if editable and then assuming that key press changed text; shifted document listener to TextTrix; altered UpdateText() to shift title back to text-unchanged display and undo listener's changes for the DisplayFile() call ./
-use canRead() and canWrite() in Txtrx ./
-have Txtrx make backup files ./
-check javax.swing.text.DefaultEditorKit source code about deleting text: look for more efficient way that TextPad uses for word deletion; use StringBuffer ./
-squash spaces-indent hard return remover bug ./
-fix tool bar movement gridbag bug ./
-check button borders: create separate button, add action w/o border to it, and add button to tool bar containter?: initialized JButton w/ tool bar add and modified the button ./
-strip out ">" from beginning of lines and check for paragraphs w/i them ./
-add numbered-list preserver ./
-check addExtension(String extension) (TextTrix.java) to see if fixes redundant file types file dialog display; add fileFilter only in TextTrix's constructor rather than each time call open/save dialog ./

v.0.1.4
-move variable declarations into constructor ./
-add file save exit check: close each tab individually when exiting ./
-add "Save" option: menu entry and option when closing changed TextPad ./
-include tabs in ante-dash/asterisk check ./
-adjust tab size ./
-Bug: unsynchornized tab/TextPad association; created new tab but loads file into previous one and saves incorrect TextPad; occurred when maybe had blank tab that had been modified ./
-about and license menu entries ./
-remember file paths: add to tab title and recall for save options ./
-cause the "about..." and "license" menu fns to call the openFile fn ./
-correct license typos [./]
-most recently saved/opened path entries ./
-some emacs key bindings ./
-remove "Select All" and "New" shortcuts ./
-save option when close unsaved TextPad ./
-changes-not-yet-saved indicator ./
-add window adaptor to catch window frame close exits ./
-switch TextPad path to file ./
-new name holders for each new TextPad ./
-fix Hard Return Remover String out-of-bounds exception ./






---------------
Current ideas
See http://sourceforge.net/projects/texttrix

----Goofy features----

-compl*i*metary spell-checker
-Great Authors: faulkner, jd salinger
-emoticon sprinkler
-random word remover
-opposite word replacer
-description tagger: add a description to any given title
-typing where cursor keeps changing position periodically
-plays appropriate midi tunes on certain typed words
-spring line: from given cursor click point, delete whatever text drag over--only to restore it if drag back to click point
-"as you like it as you type it" (convert text while typing)

----Practical features----

-extra hard return remover ./
-de-HTML: remove HTML tags
-find and replace for multiple files
-command-line for all practical functions
-display escape codes in-text for all given ASCII/Unicode characters
-editing in a single format
-non-printing character display ./
-select all shouldn't move display position

----Extension----

-Text Trixster-m: the txtrx command-line version; takes in files and a argument specifying which practical or goofy feature to use and spits out the modified file (and bak); compile w/ gcj for extra light-ness
	-go file by file, applying all commands to each before moving to next--open files fewer times

----Coding possibilities----

-rename dispalyFile to readDocumentation
-window size and position based on user's screen resolution
-go back to original caret position after removing hard returns
-switch to BorderLayout so can use moveable tool bar
-check if should have parameters for class-level objects; may need to add to some methods