todo.txt

Text Trix
the text tinker
Copyright (c) 2002-3, Text Flex
http://textflex.com/texttrix

Note: "./" is the "check-mark" symbol

----Future Work----

-move key bindings to separate fn so can call separately; standare, partial-emacs, and full-emacs key bindings option
-Java Web Start enabled
-printing
-drag selected text
-check on line-down and changed-file breaks
-status bar, incl line count
-check on lost I-bar after switching to HTML view
-MacOS X compatibility
	-check on lack of shortcuts in MacOS X
	-about dialog box
-feature to insert hard returns after a given number of characters
-elim multiple spaces via Extra Returns Remover
-allow shortcuts to work when the toolbar is in focus
-check on shortcuts in HTML/RTF views
-plug-ins: listener types create listeners that TextTrix attaches to given TextPad
-Search plug-in: count words directly by checking for non-word character
-pop-up dialog when null pointers for hard-coded documentation names
-move word-search functions to LibTTX to make accessible to all plug-ins
-"Letter Pulse" plug-in
	-check on auto-indent adjustments after switching tabs in the middle of a pulse session
	-add stop button
-check on Forward/Back when opening multiple tabs
-Forward/Back icon?
-new, unsaved(?) files don't register in the tab history(?)
-use java.util.ResourceBundle for internationalization and further keybinding customization
-auto-indent:
	-refresh after paste
	-adjust when single word spans multiple lines, including when hit enter in the middle

----Current Work----

v.0.3.4
-preferences:
	-file history:
		-store file paths of last opened or saved files; ADDED: using java.util.prefs (reqs JRE 1.4) to store paths, w/o duplicates
		-File menu with menu items for each file; ADDED: descending menu items
		-dynamically update menu items; ADDED: regenerates menu entries after opening each file
		-truncate long paths; ADDED: "..." substitutes for excessive middle path characters
		-choose number of files to remember; ADDED: adjustable file history count
	-panel:
		-create preferences panel; ADDED: panel complete with tabs, okay/apply/cancel buttons
		-remember panel size; ADDED: record panel size whenever hit "ok" button
		-remember program size and location; ADDED: record whenever move or resize the program window
	-auto-indent automatically for given extensions; ADDED: can turn on/off and customize extensions
	-plug-ins:
		-load all (default) or only specific plug-ins
-GUI worker threads; ADDED: menu creation and updating in own threads
-programming src code file filter; ADDED: filter to accept java, cpp, and c files
-fix incorrectly labeled icon shortcut keys; FIXED: removed tool tip shortcuts
-close files from left to right; RFE: allows tab restoration to easily open files in the same order that they were at closing

v.0.3.3
-set tab display size; FIXED: TabStop, TabSet, and SimpleAttributeSet to specify distances according to character widths ./
-JTabbedPane tabs still adjust their widths when the asterisk indicating unsaved changes pops up; FIXED: using monospaced font to substitute characters w/o incurring any width changes ./
-word delete often only deletes half words in Windows systems; FIXED: Document methods rather than getText()/setText() to determine characters; not sure why the latter methods work for viewPlain() and similar methods, though ./
-update tab tool tip when open file; FIXED: set the tool tip, not just the tab title ./
-word-wrap indent; ADDED: left indents equal to the number of tabs within a given paragraph ./
-URLClassLoader can't load plugins in JRE v.1.4.2-beta-b19; FIXED: create file from path and convert file into URL rather than creating URL address manually before converting; TESTING: works on JRE v.1.4.2-b28, too ./
-plugin methods allowing option windows, listeners, etc:
	-plugin types to specify how to implement them; eg "run", "dialog", "listener"; DEFERRED: plug-ins can open "dialogs," now called "options windows," through the universal startPlugIn() method (see below); may need separate plug-in type for "listeners," though ./
	-dialog types create a dialog object that TextTrix invokes on its text; ADDED: PlugIn now has two separate methods that TextTrix invokes: startPlugIn and runPlugIn; TextTrix calls startPlugIn when the user first presses the plug-in's button, which can in turn either immediately notify TextTrix to call runPlugIn or allow the plug-in to create its own dialog box to set options and a button to make the notification ./
	-check whether to make PlugInEvent and similar classes public; ADDED: the events, listeners, etc are all public to allow referencing and extension ./
	-store icon and rollIcon for future use, such as in option windows; ADDED: storage variables; plug-ins must now call PlugIn.getRollIcon(String) in getRollIcon() ./
-plugin adaptor class to permit unimplemented methods; DEFERRED: virtually all PlugIn's abstract classes are necessary now ./
-shortcut to switch b/n tabs--ff Mozilla keybindings, except that goes to last-used tab before proceeding in index order; ADDED: "Back" and "Forward" shortcuts (View > Back/Forward or Ctrl-Shift-]/[) with an unlimited history ./
-text area focus w/ each JTabbedPane switch; ADDED: two separate calls to requestFocusInWindow() in tabbed pane's stateChanged ChangeListener method -- one call within EventQueue.invokeLater(), the other afterward; TESTING: maybe some inconsistency on Windows platforms ./
-change to MPL 1.1/GPL 2.0/LGPL 2.1 triple license; SWITCHED: switched to the triple license to ensure that the Text Trix editor remains open source while permitting its inclusion in both proprietary and copyleft software ./
-retitle window bar when opening or saving new file; ADDED: title updater ./
-"Search" plugin:
	-port the FindReplace tool to a dialog-based plug-in tool; ADDED: "FindReplace" is now "Search"; PlugIn classes can now alter an "alwaysEntireText" variable to specify that the plug-in should receive all of the text despite any highlighting, along w/ highlight positions; plug-ins now return text to highlight as well as altered text ./
	-make statistics fns; ADDED: character, word, and line count ./
	-fix word search when caret at end of text; FIXED: removed detrimental variable in getWord() (formerly part of findWord()) 
	-add a no-text-change value to PlugInOutcome; ADDED: flag to show that the text has not changed, such as when finding text but not repacing it ./
-"Letter Pulse" plugin:
	-demonstrate as a "trix" plugin; ADDED: sequentially highlights the letters of a given message ./
	-demonstrate the options window; ADDED: follows a similar model as the "Search" plugin ./
	-demonstrate multiple updates to the Text Pad; ADDED: repeatedly calls the highlighter to select a different letter with each pulse ./
	-demonstrate the no-text-change flag; ADDED: pulse w/o update text since not modified ./
-null pointer when no "features.txt", "shortcuts.txt", or "license.txt"; FIXED: weed out these and similar calls when null ./

v.0.3.2
-update tab tooltip when rename ./
-longer tool tip times; ADDED: used shared instance of ToolTipManager to extend delay time ./
-check on HTML-view-induced freezing (eg use desc area from http://freshmeat.net/projects/texttrix); PROBABLE FIX: might be JRE display bug on test platform or platform OS bug ./
-added rtf file filter in open/save dialog ./
-broken selected text paragraph remover; PROBABLE FIX: Document functions seems to relieve the problem (see below) ./
-check auto-indent when hard return from end of indented line; PROBABLE FIX: Document functions seems to relieve the problem (see below) ./
-plug-in architecture for features; ADDED: JAR-based plugin model ./
-word-determiner failure (see myweb/txtfl/downloads.html); FIX: index bugs in Tools.findWord ./
-tools don't work in Windows systems; FIX: ever since the switch to JTextPane from JText Area, the setText() function seems to work on only a given line--using Document functions instead seems to relieve the problem ./
-open multiple files at once ./
-deleteNextChar keybinding ./
-fix tabbed pane title updater to lessen size change when change Save asterisk symbol ./
-check on inabilit to save by htting enter in save-as dialog box for new filenames; check on updating the tab title during such saves and also opening the first file; often have to save-as twice before actually save; check on getting "open" tab instead of "save" in Save As dialog sometimes; FIX: setMultiSelectionEnabled to false for save dialog ./
-check restoring cursor when return to window--add window adapter feature to explicity bring back to original position; FIX: return to original cursor position or start of selected region ./
-broken find/replace; FIX: word search bug ./
-check on having to leave jar plugins uncompressed (-0 option); FIX: bug in JRE v.1.4 prevents PNG/GIF loading from compressed JARS; workaround by loading data into array and sending array to PNG constructor ./
-allow popups to display in Windows systems; FIX: use mouseReleased() in addition to mousePressed() with isPopupTrigger() ./
-check on non-functional shortcut keys after HTML view; NO LONGER REPRODUCIBLE ./
-self-extractor to avoid launching from unextracted zip packages, which do not read the plugins; ADDED: Jar Ajar self-extractor now packages Text Trix ./
-specify on command-line extra files to open at start (eventually want to have option to load files from last exit, too) ./
-check before overwriting file; ADDED: file overwrite warning dialog ./
-check file permissions before saving; ADDED: unpermitted-path dialog, with option to save to new path ./
-close streams in catch statements; ADDED: finally statements as well as null pointer checks on resource input streams from files ./

v.0.3.1
-convert HTML character entities and convert multiple spaces to single spaces in the HTML Replacer tool
-auto-indent ./
-open/save dialogs return to last opened/saved path for current tab ./
-tab-switch shortcut keys; bug fix for closing tab when none exist; added View menu ./
-option to only apply features to selected areas ./
-enter key while in find dialog's pattern box starts search; while in replace box, start find and replace ./
-fix findWord() to work for word at very end of text ./
-wrap in findReplace() when at end of text ./
-check find/replace repainting of text area; use getHighlighter().setVisible(true) ./
-stricter rules for numbered list in extra hard return remover ./
-plain/html/rtf viewer; switch to JTextPane (JEditorPane doesn't support word wrapping well) ./
-look into StateEdit for viewer undo functionality (see "SwingBk," 11.2.7) ./
-no longer have to invoke undo mutiple times with tools ./
-use getSelectedPane() more ./
-text pad popup menu ./
-program icon ./

v.0.3 series: features, features, features
-rename file open in current session
-improve program and toolbar icons

v.0.1.6, aka v.0.3.0
-rudimentary html replacer ./
-find/replace, incl separate word, word-wrap, selected text, replace first, replace all, and ignore case ./
-see if can add parent component to save and open dialogs ./
-non-printing character display ./
-prevent closure after clicking to close the window frame and selecting cancel ./
-text area focus on start ./
-equivalency string table loading for preferences suite (implement preferences in v.0.5 series) ./
-change cancelled save on exit to also cancel the exit--try having fileSaveDialog return whether canceled ./
-separate "Features descriptions" page in "Help" section ./
-backup text before hard return removal in Txtrx ./

v.0.1.5
-create command-line version, including all appropriate text-goofing function ./
-change email address refs to davit@users.sourceforge.net ./
-eliminate the <pre> tags ./
-split features into separate classes to make the features more portable ./
-rename stripExtraHardReturns() to removeExtraHardReturns; somehow currently works w/ merely hardReturns call ./
-word deletion--add as new action for portability ./
-emacs word forward and backward keybindings ./
-menu mnemonics ./
-toolbar ./
-toolbar icons (tmp), incl rollover change ./
-allow people to use indents as lists ./
-only append space while combining lines if line lacks one at end ./
-check about expanding tabs when increase title size via " *"--always add 2-3 spaces to each title when showing w/o the " *" ./
-check one character delay before showing change in title--prob TextPad flags change after TextTrix checks; try checking if editable and then assuming that key press changed text; shifted document listener to TextTrix; altered UpdateText() to shift title back to text-unchanged display and undo listener's changes for the DisplayFile() call ./
-use canRead() and canWrite() in Txtrx ./
-have Txtrx make backup files ./
-check javax.swing.text.DefaultEditorKit source code about deleting text: look for more efficient way that TextPad uses for word deletion; use StringBuffer ./
-squash spaces-indent hard return remover bug ./
-fix tool bar movement gridbag bug ./
-check button borders: create separate button, add action w/o border to it, and add button to tool bar containter?: initialized JButton w/ tool bar add and modified the button ./
-strip out ">" from beginning of lines and check for paragraphs w/i them ./
-add numbered-list preserver ./
-check addExtension(String extension) (TextTrix.java) to see if fixes redundant file types file dialog display; add fileFilter only in TextTrix's constructor rather than each time call open/save dialog ./

v.0.1.4
-move variable declarations into constructor ./
-add file save exit check: close each tab individually when exiting ./
-add "Save" option: menu entry and option when closing changed TextPad ./
-include tabs in ante-dash/asterisk check ./
-adjust tab size ./
-Bug: unsynchornized tab/TextPad association; created new tab but loads file into previous one and saves incorrect TextPad; occurred when maybe had blank tab that had been modified ./
-about and license menu entries ./
-remember file paths: add to tab title and recall for save options ./
-cause the "about..." and "license" menu fns to call the openFile fn ./
-correct license typos [./]
-most recently saved/opened path entries ./
-some emacs key bindings ./
-remove "Select All" and "New" shortcuts ./
-save option when close unsaved TextPad ./
-changes-not-yet-saved indicator ./
-add window adaptor to catch window frame close exits ./
-switch TextPad path to file ./
-new name holders for each new TextPad ./
-fix Hard Return Remover String out-of-bounds exception ./






---------------
Current ideas
See http://sourceforge.net/projects/texttrix

----Goofy features----

-compl*i*metary spell-checker
-Great Authors: faulkner, jd salinger
-emoticon sprinkler
-random word remover
-opposite word replacer
-description tagger: add a description to any given title
-typing where cursor keeps changing position periodically
-plays appropriate midi tunes on certain typed words
-spring line: from given cursor click point, delete whatever text drag over--only to restore it if drag back to click point
-"as you like it as you type it" (convert text while typing)

----Practical features----

-extra hard return remover ./
-de-HTML: remove HTML tags
-find and replace for multiple files
-command-line for all practical functions
-display escape codes in-text for all given ASCII/Unicode characters
-editing in a single format
-non-printing character display ./
-select all shouldn't move display position

----Extension----

-Text Trixster-m: the txtrx command-line version; takes in files and a argument specifying which practical or goofy feature to use and spits out the modified file (and bak); compile w/ gcj for extra light-ness
	-go file by file, applying all commands to each before moving to next--open files fewer times

----Coding possibilities----

-rename dispalyFile to readDocumentation
-window size and position based on user's screen resolution
-go back to original caret position after removing hard returns
-switch to BorderLayout so can use moveable tool bar
-check if should have parameters for class-level objects; may need to add to some methods
